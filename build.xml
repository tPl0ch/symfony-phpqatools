<?xml version="1.0" encoding="utf-8"?>
<project name="phpqatools-edition default build file" default="build">
    <target name="build"
            depends="prepare,symfony,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb"/>

    <target name="build-test"
            depends="prepare,symfony,phpunit"/>

    <target name="build-parallel"
            depends="prepare,symfony,lint,tools-parallel,phpunit,phpcb"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/phpDocumentor"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/behat"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpDocumentor"/>
        <mkdir dir="${basedir}/build/behat"/>
    </target>

    <target name="symfony-prepare" description="Adding required files for symfony2 to work">
        <exec executable="cp">
            <arg value="-v" />
            <arg path="${basedir}/app/config/parameters.yml.ci" />
            <arg path="${basedir}/app/config/parameters.yml" />
        </exec>
    </target>

    <target name="composer" description="Install packages and dependencies via composer">
        <delete file="${basedir}/composer.phar"/>
        <exec executable="bash">
            <arg value="-c"/>
            <arg value="curl -s https://getcomposer.org/installer | php"/>
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/composer.phar" />
            <arg value="install" />
            <arg value="-v" />
            <arg value="--prefer-source" />
        </exec>
    </target>

    <target name="symfony-cc" description="Clears cache for various environments">
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/app/console" />
            <arg value="cache:clear" />
            <arg value="--env=prod" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/app/console" />
            <arg value="cache:clear" />
            <arg value="--env=dev" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/app/console" />
            <arg value="cache:clear" />
            <arg value="--env=test" />
        </exec>
    </target>

    <target name="symfony" depends="symfony-prepare,composer,symfony-cc">
        <echo message="Symfony2 tasks end" />
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />

            <fileset dir="${basedir}/src">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${basedir}/bin/phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="${basedir}/bin/pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/bin/phpmd">
            <arg path="${basedir}/src" />
            <arg value="text" />
            <arg value="${basedir}/build/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${basedir}/bin/phpmd">
            <arg path="${basedir}/src" />
            <arg value="xml" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/bin/phpcs">
            <arg value="--standard=PSR2" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="${basedir}/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="${basedir}/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDocumentor">
        <exec executable="${basedir}/bin/phpdoc.php">
            <arg value="--template" />
            <arg path="${basedir}/data/templates/responsive" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${basedir}/bin/phpunit" failonerror="true">
            <arg value="-c" />
            <arg path="${basedir}/app/phpunit.xml.ci" />
        </exec>
    </target>

    <!--
    <target name="behat" description="Run Behat Scenarios from Bundles">
        <exec executable="php" failonerror="true">
            <arg value="${basedir}/bin/behat" />
            <arg value="-p ci" />
            <arg value="-o ${basedir}/build/behat/report.html" />
            <arg value="-a" />
        </exec>
    </target>
    -->

    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="${basedir}/bin/phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/src" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>
</project>
